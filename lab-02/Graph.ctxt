#BlueJ class context
comment0.target=Graph
comment1.params=vertices\ edges
comment1.target=Graph(java.lang.String[],\ java.lang.String[][])
comment10.params=
comment10.target=int\ edges()
comment10.text=\r\n\ Retorna\ la\ canridad\ de\ aristas\ del\ grafo\r\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment2.params=vector\ vertices
comment2.target=void\ convertVetorToArrayList(java.lang.String[],\ java.util.ArrayList)
comment2.text=\r\n\ Convierte\ un\ array\ de\ cadenas\ en\ una\ lista\ de\ v\u00E9rtices,\ asegur\u00E1ndose\ de\ que\ no\ haya\ duplicados.\r\n\r\n\ @param\ vector\ \ \ El\ array\ de\ cadenas\ que\ representa\ los\ v\u00E9rtices\ a\ agregar.\r\n\ @param\ vertices\ La\ lista\ de\ v\u00E9rtices\ donde\ se\ almacenar\u00E1n\ los\ valores\ \u00FAnicos.\r\n
comment3.params=matrix\ edges
comment3.target=void\ convertMatrixToMatrixArrayList(java.lang.String[][],\ java.util.ArrayList)
comment3.text=\r\n\ Convierte\ una\ matriz\ de\ cadenas\ en\ una\ lista\ de\ listas,\ asegur\u00E1ndose\ de\ que\ las\ aristas\ sean\ v\u00E1lidas\ \r\n\ (es\ decir,\ que\ conecten\ v\u00E9rtices\ existentes\ en\ el\ grafo\ y\ que\ no\ est\u00E9n\ duplicadas).\r\n\r\n\ @param\ matrix\ La\ matriz\ de\ cadenas\ que\ representa\ las\ aristas\ del\ grafo.\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Cada\ fila\ contiene\ dos\ elementos\ que\ representan\ una\ conexi\u00F3n\ entre\ dos\ v\u00E9rtices.\r\n\ @param\ edges\ \ La\ lista\ de\ listas\ donde\ se\ almacenar\u00E1n\ las\ aristas\ \u00FAnicas.\r\n
comment4.params=vertex
comment4.target=boolean\ contains(java.lang.String)
comment5.params=start\ end
comment5.target=Graph\ path(java.lang.String,\ java.lang.String)
comment6.params=vertex
comment6.target=java.util.ArrayList\ getNeighbors(java.lang.String)
comment7.params=g
comment7.target=Graph\ union(Graph)
comment8.params=edgeList\ edge
comment8.target=boolean\ containsEdge(java.util.ArrayList,\ java.util.ArrayList)
comment9.params=
comment9.target=int\ vertices()
comment9.text=\r\n\ Retorna\ la\ canridad\ de\ vertices\ del\ grafo\r\n
numComments=13
